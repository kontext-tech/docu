@model Kontext.Data.Models.ViewModels.PagedViewModel<object, BlogPostComment>

@{
    ViewData["Title"] = SharedLocalizer["Manage blog comments"];
    ViewData.AddActivePage(ManageNavPages.ManageBlogComments);
}
<div class="table-responsive">
    <table class="table table-striped table-sm">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ChildViewModels.FirstOrDefault().Approved)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChildViewModels.FirstOrDefault().Text)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChildViewModels.FirstOrDefault().Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChildViewModels.FirstOrDefault().IsBlogUser)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChildViewModels.FirstOrDefault().IsDeleted)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChildViewModels.FirstOrDefault().Language)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ChildViewModels)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Approved)
                    </td>
                    <td>
                        <div data-toggle="tooltip" data-html="true" data-title="@item.Title">
                            @Html.Raw(item.Text)
                        </div>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsBlogUser)
                    </td>
                    <td class="@(item.IsDeleted?"bg-warning":"")">
                        @Html.DisplayFor(modelItem => item.IsDeleted)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Language.LanguageCode)
                    </td>
                    <td>
                        @if (User.HasPermissionClaim(BlogApplicationPermissionProvider.ManageBlogComments))
                        {
                            <a asp-action="Edit" asp-route-id="@item.BlogPostCommentId" class="btn btn-outline-success"><i class="fa fa-edit"></i> @SharedLocalizer["Edit"]</a>
                        }

                        @if (User.HasPermissionClaim(BlogApplicationPermissionProvider.ViewBlogCategories))
                        {
                            <a asp-action="Details" asp-route-id="@item.BlogPostCommentId" class="btn btn-outline-primary"><i class="fa fa-eye"></i> @SharedLocalizer["View"]</a>
                        }
                        @*<a asp-action="Delete" asp-route-id="@item.BlogPostCommentId">Delete</a>*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!--Pager-->
<nav aria-label="Page navigation">
    <ul class="pagination pagination-lg">
        <li class='@(Model.HasPreviousPage ? "page-item" : "page-item disabled")'>
            <a class="page-link " asp-route-page="@Model.PreviousPage" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>

        @for (int i = Model.StartPage; i <= Model.EndPage; i++)
        {
            <li class='page-item @(i == Model.CurrentPage ? "active" : "")'><a class="page-link" asp-route-page="@i">@i</a></li>
        }

        <li class='@(Model.HasNextPage ? "page-item" : "page-item disabled")'>
            <a class="page-link" asp-route-page="@Model.NextPage" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>