@model Kontext.Data.Models.ViewModels.PagedViewModel<BlogCategory, BlogPost>
@{
    ViewData["Title"] = Model.ViewModel.Title + " - " + Model.ViewModel.Blog.Title;

    ViewData[Constants.PageKeywordsViewDataKey] = Model.ViewModel.Title;
    ViewData.AddActiveCategory(Model.ViewModel.Blog.UniqueName);
    if (!string.IsNullOrWhiteSpace(Model.ViewModel.Description))
    {
        ViewData[Constants.PageDescriptionViewDataKey] = Model.ViewModel.Description.ToPageDescription().Trim();
    }
}

<div class="jumbotron bg-secondary text-light rounded-0 mb-0">
    <h2><a class="nav-link" asp-area="BlogArea" asp-action="Index" asp-controller="BlogCategory" asp-route-blogName="@Model.ViewModel.Blog.UniqueName" asp-route-categoryName="@Model.ViewModel.UniqueName" asp-route-page="">@Model.ViewModel.Title </a></h2>
    <p class="lead">@Html.Raw(Model.ViewModel.Description)</p>
    <a></a>
</div><!--Nav-->
<nav class="breadcrumb">
    <a class="breadcrumb-item" asp-area="" asp-controller="Home" asp-action="Index"><i class="fa fa-home"></i> @SharedLocalizer["Home"]</a>
    <a class="breadcrumb-item" asp-area="BlogArea" asp-controller="Home" asp-action="Index"> @SharedLocalizer["Docs"]</a>
    <a class="breadcrumb-item" asp-area="BlogArea" asp-action="Detail" asp-controller="Home" asp-route-name="@Model.ViewModel.Blog.UniqueName" asp-route-page="" aria-expanded="true">@Model.ViewModel.Blog.Title</a>
    <span class="breadcrumb-item active">@Model.ViewModel.Title</span>

</nav>
<div class="container-fluid mt-2">
    <div class="row">
        <div class="col-sm-3">
            <div class="sticky d-none d-md-block d-lg-block">
                <!--Tags cloud-->
                @await Component.InvokeAsync("TagList")
            </div>
        </div>
        <div class="col-sm-9">
            <!--Pager-->
            <nav aria-label="Page navigation" class="sticky">
                <ul class="pagination pagination-lg">
                    <li class='@(Model.HasPreviousPage?"page-item":"page-item disabled")'>
                        <a class="page-link " asp-area="BlogArea" asp-controller="BlogCategory" asp-action="Index" asp-route-blogName="@Model.ViewModel.Blog.UniqueName" asp-route-categoryName="@Model.ViewModel.UniqueName" asp-route-page="@Model.PreviousPage" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>

                    @for (int i = Model.StartPage; i <= Model.EndPage; i++)
                    {
                        <li class='page-item @(i==Model.CurrentPage?"active":"")'><a class="page-link" asp-area="BlogArea" asp-controller="BlogCategory" asp-action="Index" asp-route-blogName="@Model.ViewModel.Blog.UniqueName" asp-route-categoryName="@Model.ViewModel.UniqueName" asp-route-page="@i">@i</a></li>
                    }

                    <li class='@(Model.HasNextPage?"page-item":"page-item disabled")'>
                        <a class="page-link" asp-area="BlogArea" asp-controller="BlogCategory" asp-action="Index" asp-route-blogName="@Model.ViewModel.Blog.UniqueName" asp-route-categoryName="@Model.ViewModel.UniqueName" asp-route-page="@Model.NextPage" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>
            </nav>
            <!--List of blogs-->
            @foreach (var post in Model.ChildViewModels)
            {
                @await Html.PartialAsync("_BlogPostDetailPartial", post)
            }
        </div>
    </div>
</div>
