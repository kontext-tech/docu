@model Kontext.Data.Models.ViewModels.PagedViewModel<BlogViewModel, BlogPost>
@{
    ViewData["Title"] = Model.ViewModel.Title;
    ViewData[Constants.PageKeywordsViewDataKey] = Model.ViewModel.Title;
    ViewData.AddActiveCategory(Model.ViewModel.UniqueName);
    if (!string.IsNullOrWhiteSpace(Model.ViewModel.SubTitle))
    {
        ViewData[Constants.PageDescriptionViewDataKey] = Model.ViewModel.SubTitle.ToPageDescription().Trim();
    }
}

@using Microsoft.Extensions.Options
@using AspNetCore.XmlRpc
@inject IOptions<XmlRpcOptions> options
@section HtmlHeadSection {
    <link rel="EditURI" type="application/rsd+xml" title="RSD" href="@string.Concat(options.Value.RsdEndpoint,'/', Model.ViewModel.UniqueName)" />
    <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="@string.Concat(options.Value.ManifestEndpoint,'/', Model.ViewModel.UniqueName)" />
}

<div class="jumbotron bg-secondary text-light rounded-0 mb-0">
    <h2><a class="nav-link" asp-area="BlogArea" asp-action="Detail" asp-controller="Home" asp-route-name="@Model.ViewModel.UniqueName" asp-route-page="">@Model.ViewModel.Title </a></h2>
    <p class="lead">@Html.Raw(Model.ViewModel.SubTitle)</p>
    <p><a class="btn btn-outline-success" target="_blank" href="@Url.RssLink(Model.ViewModel.BlogId, Context.Request.Scheme)"><i class="fa fa-rss"></i> @SharedLocalizer["Subscribe"]</a></p>
</div><!--Nav-->
<nav class="breadcrumb">
    <a class="breadcrumb-item" asp-area="" asp-controller="Home" asp-action="Index"><i class="fa fa-home"></i> @SharedLocalizer["Home"]</a>
    <a class="breadcrumb-item" asp-area="BlogArea" asp-controller="Home" asp-action="Index"> @SharedLocalizer["Docs"]</a>
    <span class="breadcrumb-item active">@Model.ViewModel.Title</span>

</nav>
<div class="container-fluid mt-2">
    <div class="row">
        <div class="col-sm-3">
            <!--Categories-->
            <div class="list-group sticky d-none d-md-block d-lg-block">
                <div class="list-group-item active bg-success"><h4><i class="fa fa-list-ul"></i> Categories</h4></div>
                @foreach (var cate in Model.ViewModel.Categories)
                {
                    if (cate.Active)
                    {
                        <a class="dropdown-item" asp-area="BlogArea" asp-action="Index" asp-controller="BlogCategory" asp-route-blogName="@Model.ViewModel.UniqueName" asp-route-categoryName="@cate.UniqueName" asp-route-page="">@cate.Title</a>
                    }
                }
            </div>
        </div>
        <div class="col-sm-9 pl-1">
            <!--Pager-->
            <nav aria-label="Page navigation" class="sticky">
                <ul class="pagination pagination-lg">
                    <li class='@(Model.HasPreviousPage?"page-item":"page-item disabled")'>
                        <a class="page-link " asp-area="BlogArea" asp-controller="Home" asp-action="Detail" asp-route-name="@Model.ViewModel.UniqueName" asp-route-page="@Model.PreviousPage" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>

                    @for (int i = Model.StartPage; i <= Model.EndPage; i++)
                    {
                        <li class='page-item @(i==Model.CurrentPage?"active":"")'><a class="page-link" asp-area="BlogArea" asp-controller="Home" asp-action="Detail" asp-route-name="@Model.ViewModel.UniqueName" asp-route-page="@i">@i</a></li>
                    }

                    <li class='@(Model.HasNextPage?"page-item":"page-item disabled")'>
                        <a class="page-link" asp-area="BlogArea" asp-controller="Home" asp-action="Detail" asp-route-name="@Model.ViewModel.UniqueName" asp- asp-route-page="@Model.NextPage" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>
            </nav>
            @foreach (var post in Model.ChildViewModels)
            {
                @await Html.PartialAsync("_BlogPostDetailPartial", post)
            }

        </div>
    </div>
</div>
