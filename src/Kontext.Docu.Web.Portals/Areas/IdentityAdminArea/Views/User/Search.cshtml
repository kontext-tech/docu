@model Kontext.Data.Models.ViewModels.PagedViewModel<object, ApplicationUser>
@{
    ViewData["Title"] = SharedLocalizer[$"Search user"];
    ViewData.AddActivePage(ManageNavPages.ManageUsers);
}
<!--List of roles-->
<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">@SharedLocalizer["Username"]</th>
                <th scope="col">@SharedLocalizer["FullName"]</th>
                <th scope="col">@SharedLocalizer["Email"]</th>
                <th scope="col">@SharedLocalizer["IsEnabled"]</th>
                <th scope="col">@SharedLocalizer["EmailConfirmed"]</th>
                <th scope="col">@SharedLocalizer["IsLockedOut"]</th>
                <th scope="col">@SharedLocalizer["Roles"]</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var u in Model.ChildViewModels)
            {
                <tr>
                    <td>@u.UserName</td>
                    <td>@u.FullName</td>
                    <td>@u.Email</td>
                    <td>@SharedLocalizer[u.IsEnabled.ToString()]</td>
                    <td class="@(u.EmailConfirmed?"":"bg-warning")">@SharedLocalizer[u.EmailConfirmed.ToString()]</td>
                    <td class="@(u.IsLockedOut?"bg-warning":"")">@SharedLocalizer[u.IsLockedOut.ToString()]</td>
                    <td>
                        @foreach (var r in u.UserRoles)
                        {
                            <span class="badge badge-success">@r.Role.Name</span>
                        }
                    </td>
                    <td>
                        @if (User.HasPermissionClaim(DefaultApplicationPermissionProvider.ManageUsers) && User.Identity.Name != u.UserName)
                        {
                            <a class="btn btn-outline-success" asp-action="Edit" asp-route-id="@u.Id"><i class="fa fa-edit"></i> @SharedLocalizer["Edit"]</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!--Pager-->
<nav aria-label="Page navigation">
    <ul class="pagination pagination-lg">
        <li class='@(Model.HasPreviousPage ? "page-item" : "page-item disabled")'>
            <a class="page-link " asp-controller="User" asp-action="Search" asp-route-page="@Model.PreviousPage" asp-route-keyword="@ViewData["keyword"]" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>

        @for (int i = Model.StartPage; i <= Model.EndPage; i++)
        {
            <li class='page-item @(i == Model.CurrentPage ? "active" : "")'><a class="page-link" asp-controller="User" asp-action="Search" asp-route-page="@i" asp-route-keyword="@ViewData["keyword"]">@i</a></li>
        }

        <li class='@(Model.HasNextPage ? "page-item" : "page-item disabled")'>
            <a class="page-link" asp-controller="User" asp-action="Search" asp-route-page="@Model.NextPage" asp-route-keyword="@ViewData["keyword"]" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>